#Область УправлениеСостоянием

&НаСервере
Процедура УправлениеФормойНаСервере(ИзмененныеРеквизиты = Неопределено, СохраненноеСостояние = Неопределено)
	РаботаСФормойКлиентСервер.УправлениеФормой(ЭтотОбъект, ИзмененныеРеквизиты, СохраненноеСостояние);	
КонецПроцедуры

&НаКлиенте
Процедура УправлениеФормой(ИзмененныеРеквизиты = Неопределено)
	Перем СохраненноеСостояние;
	Если НЕ РаботаСФормойКлиентСервер.УправлениеФормой(ЭтотОбъект, ИзмененныеРеквизиты, СохраненноеСостояние) Тогда
		УправлениеФормойНаСервере(ИзмененныеРеквизиты, СохраненноеСостояние);
	КонецЕсли;
КонецПроцедуры

#Область ОбработчикиСобытийФормы

//@skip-warning
&НаКлиенте
Процедура ПриАктивизацииСтроки(Элемент)
	РаботаСФормойКлиентСервер.ПриАктивизацииСтроки(ЭтотОбъект, Элемент);
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	РаботаСФормойКлиентСервер.НачалоВыбора(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры

#Область ПриИзменении // При расчете может потребоваться изменить контекст, а сделать это можно только в модуле формы

//@skip-warning
//  Процедура продолжает расчет уже в контексте сервера. Такое разделение процедуры нужно для программного переключения контекста
&НаСервере
Процедура РассчитатьСостояниеНаСервере(ИзмененныеРеквизиты, СохраненноеСостояние)
	РаботаСМодельюКлиентСервер.РассчитатьСостояние(ЭтотОбъект, ИзмененныеРеквизиты, СохраненноеСостояние);
	УправлениеФормойНаСервере(ИзмененныеРеквизиты);
КонецПроцедуры

//  Процедура выполняет расчет в контексте клиента
&НаКлиенте
Процедура РассчитатьСостояние(ИзмененныеРеквизиты)
	Перем СохраненноеСостояние;
	Если НЕ РаботаСМодельюКлиентСервер.РассчитатьСостояние(ЭтотОбъект, ИзмененныеРеквизиты, СохраненноеСостояние) Тогда
		РассчитатьСостояниеНаСервере(ИзмененныеРеквизиты, СохраненноеСостояние);
	Иначе
		УправлениеФормой(ИзмененныеРеквизиты);
	КонецЕсли;
КонецПроцедуры

//@skip-warning
&НаКлиенте
Процедура ПриИзменении(Элемент)
	Модель = РаботаСМодельюКлиентСервер.МодельОбъекта(ЭтотОбъект);
	Параметр = Модель.Параметры[Модель.ПараметрыЭлементов[Элемент.Имя]];
	Если Параметр = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПроверятьЗначение = ТипЗнч(Элемент) = Тип("ПолеФормы")
		И Элемент.Вид = ВидПоляФормы.ПолеВвода
		И Элемент.ИсторияВыбораПриВводе = ИсторияВыбораПриВводе.Авто;
	
	Если Параметр.ЭтоЭлементКоллекции Тогда
		ИзмененныеРеквизиты = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(РаботаСМодельюКлиентСервер.Реквизит(Параметр.Идентификатор, 
			РаботаСМодельюКлиентСервер.ЗначениеПараметра(ЭтотОбъект, Модель, Модель.Параметры[Параметр.Коллекция + ".ИндексСтроки"],
			ПроверятьЗначение)));
	Иначе
		ИзмененныеРеквизиты = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(РаботаСМодельюКлиентСервер.Реквизит(Параметр.Идентификатор,, ПроверятьЗначение));
	КонецЕсли;
	РассчитатьСостояние(ИзмененныеРеквизиты);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//  Создание описания модели. Начало
	Модель = РаботаСМодельюКлиентСервер.Модель("МодельНалоговыеРеквизиты", "Объект");
	//  Описание самой формы
	РаботаСФормойКлиентСервер.Элемент(ЭтотОбъект, Модель, Элементы.НалоговыеРеквизиты_Заголовок,, 
		"ИдентификаторПлатежа,КодБК,КодОКАТО,ПоказательДаты,ПоказательНомера,ПоказательОснования,ПоказательПериода,СтатусСоставителя,НалоговыеРеквизиты_СвернутоеОтображение");
	РаботаСФормойКлиентСервер.Элемент(ЭтотОбъект, Модель, Элементы.НалоговыеРеквизиты_Картинка,, "НалоговыеРеквизиты_СвернутоеОтображение");
	РаботаСФормойКлиентСервер.Элемент(ЭтотОбъект, Модель, Элементы.НалоговыеРеквизиты_КартинкаСвернутогоОтображения,, "НалоговыеРеквизиты_СвернутоеОтображение");
	РаботаСФормойКлиентСервер.Элемент(ЭтотОбъект, Модель, Элементы.НалоговыеРеквизиты_Элементы,, "НалоговыеРеквизиты_СвернутоеОтображение");
	//  Создание описания модели. Конец
	РаботаСМоделью.Инициализировать(ЭтотОбъект, Модель);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Отображение состояния формы в контексте клиента, 
	// т.к. некоторые параметры формы должны восстановиться из сохраненных
	УправлениеФормой();
КонецПроцедуры

&НаКлиенте
Процедура НалоговыеРеквизиты_ЗаголовокНажатие(Элемент)
	Перем ИзмененныеРеквизиты;
	//  Установка нового значения рейтинга по формуле: РейтингЗвезды - СостояниеЗвезды
	РаботаСМодельюКлиентСервер.УстановитьЗначение(ЭтотОбъект, "НалоговыеРеквизиты_СвернутоеОтображение",, НЕ НалоговыеРеквизиты_СвернутоеОтображение, ИзмененныеРеквизиты);
	//  Обновление формы 
	УправлениеФормой(ИзмененныеРеквизиты);
КонецПроцедуры


