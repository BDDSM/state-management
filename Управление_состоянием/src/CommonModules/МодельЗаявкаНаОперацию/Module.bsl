Функция СвойстваЭтаФорма(Свойства, Параметры) Экспорт
	Представление = СтрШаблон("Заявка %1; (%2) %3 %4 %5",
							Параметры.Номер,
							Параметры.ПриходРасход,
							Параметры.СуммаДокумента,
							Параметры.ВалютаДокумента,
							"к " + Формат(Параметры.ДатаНачала, "ДФ=dd.MM.yyyy"));
	Если ЗначениеЗаполнено(Параметры.Контрагент) Тогда
		Представление = Представление + "; " + Параметры.Контрагент;
	КонецЕсли;
	Представление = Представление + "; " + Параметры.ВидОперацииБюджетирование;
	Если Параметры.ПометкаУдаления Тогда
		Статус = "Помечен на удаление";
	ИначеЕсли Параметры.Проведен Тогда
		Статус = "Проведен";
	ИначеЕсли Параметры.ЭтоНовый Тогда
		Статус = "Новый";
	Иначе
		Статус = "Записан";
	КонецЕсли;
	Заголовок = Представление + ". " + Статус;
	Свойства.Вставить("Заголовок", Заголовок);
	Свойства.Вставить("ТолькоПросмотр", Параметры.ТолькоПросмотр);
	Возврат Истина;
КонецФункции

Функция СвойстваСчетКонтрагента(Свойства, Параметры) Экспорт
	Свойства.Вставить("Видимость", Параметры.ФормаОплатыБанк);
	Возврат Истина;
КонецФункции

Функция СвойстваБанковскийСчет(Свойства, Параметры) Экспорт
	Свойства.Вставить("Видимость", Параметры.ФормаОплатыБанк);
	Возврат Истина;
КонецФункции

Функция СвойстваФормаОплаты(Свойства, Параметры) Экспорт
	Свойства.Вставить("Доступность", НЕ Параметры.ТипОперацииБюджетирование = ПредопределенноеЗначение("Перечисление.ТипыОперацийБюжетирование.РасчетыПоНалогамИСборам"));
	Возврат Истина;
КонецФункции

Функция СвойстваКонтрагентРасчетов(Свойства, Параметры) Экспорт
	Свойства.Вставить("Видимость", Параметры.РасчетыЧерезТретьихЛиц);
	Возврат Истина;
КонецФункции

Функция СвойстваДоговорРасчетов(Свойства, Параметры) Экспорт
	Свойства.Вставить("Видимость", Параметры.РасчетыЧерезТретьихЛиц);
	Возврат Истина;
КонецФункции

Функция СвойстваГруппаРасчетыЧерезТретьихЛиц(Свойства, Параметры) Экспорт
	Свойства.Вставить("ЦветФона", ?(Параметры.РасчетыЧерезТретьихЛиц, Новый Цвет(251, 249, 236), Новый Цвет));
	Возврат Истина;
КонецФункции

Функция СвойстваСуммаВзаиморасчетов(Свойства, Параметры) Экспорт
	Свойства.Вставить("Видимость", НЕ Параметры.ВалютаВзаиморасчетов = Параметры.ВалютаДокумента);
	Возврат Истина;
КонецФункции

Функция СвойстваВалютаВзаиморасчетов(Свойства, Параметры) Экспорт
	Если Параметры.ВалютаВзаиморасчетов = Параметры.ВалютаДокумента Тогда
		Свойства.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Авто);
	Иначе
		Свойства.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
	КонецЕсли;
	Свойства.Вставить("ТолькоПросмотр", ЗначениеЗаполнено(Параметры.ДоговорКонтрагента));
	Возврат Истина;
КонецФункции

Функция СвойстваСтраницаАналитикиБюджетирования(Свойства, Параметры) Экспорт
	Количество = Параметры.ДвиженияОперации.Количество();
	Свойства.Вставить("Заголовок", "Аналитики бюджетирования" + ?(Количество > 0, " (" + Количество + ")", ""));
	Возврат Истина;
КонецФункции

Функция СвойстваДвиженияОперацииСуммаВзаиморасчетов(Свойства, Параметры) Экспорт 
	Свойства.Вставить("Заголовок", ?(ЗначениеЗаполнено(Параметры.ВалютаВзаиморасчетов), СтрШаблон("Сумма расчетов, %1", Параметры.ВалютаВзаиморасчетов), "Сумма расчетов"));
	Свойства.Вставить("Видимость", Параметры.ВалютаВзаиморасчетов <> Параметры.ВалютаДокумента);
	Возврат Истина;
КонецФункции

Функция СвойстваДвиженияОперацииСумма(Свойства, Параметры) Экспорт 
	Свойства.Вставить("Заголовок", ?(ЗначениеЗаполнено(Параметры.ВалютаДокумента), СтрШаблон("Сумма платежа, %1", Параметры.ВалютаДокумента), "Сумма платежа"));
	Возврат Истина;
КонецФункции

Функция СвойстваГруппаРеквизитыКонтрагента(Свойства, Параметры) Экспорт 
	Свойства.Вставить("Видимость", Параметры.ТипОперацииБюджетирование <> ПредопределенноеЗначение("Перечисление.ТипыОперацийБюжетирование.КонвертацияВалюты"));
	Возврат Истина;
КонецФункции

Функция СвойстваГруппаКонвертацияРасчетов(Свойства, Параметры) Экспорт 
	Свойства.Вставить("Видимость", Параметры.ТипОперацииБюджетирование = ПредопределенноеЗначение("Перечисление.ТипыОперацийБюжетирование.КонвертацияВалюты"));
	Возврат Истина;
КонецФункции

Функция СвойстваСтраницы(Свойства, Параметры) Экспорт
	Если Параметры.ТипОперацииБюджетирование = ПредопределенноеЗначение("Перечисление.ТипыОперацийБюжетирование.КонвертацияВалюты") Тогда
		Свойства.Вставить("ОтображениеСтраниц", ОтображениеСтраницФормы.Нет);
		Свойства.Вставить("ТекущаяСтраница", "СтраницаОсновныеРеквизиты");
	Иначе
		Свойства.Вставить("ОтображениеСтраниц", ОтображениеСтраницФормы.ЗакладкиСверху);
	КонецЕсли;
	Возврат Истина;
КонецФункции

#Если Сервер Тогда
Функция ЗначениеКроссКурс(Контекст, Объект, Модель, Параметры, СтандартнаяОбработка, Отказ) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КурсыВалютыВзаиморасчетов.Курс КАК КурсРасчетов,
	|	КурсыВалютыДокумента.Курс КАК КурсДокумента
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &ВалютаДокумента) КАК КурсыВалютыДокумента,
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &ВалютаВзаиморасчетов) КАК КурсыВалютыВзаиморасчетов";
	Запрос.УстановитьПараметр("ВалютаДокумента", Параметры.ВалютаДокумента);
	Запрос.УстановитьПараметр("ВалютаВзаиморасчетов", Параметры.ВалютаВзаиморасчетов);
	Запрос.УстановитьПараметр("Период", Параметры.Дата);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка.КурсДокумента / Выборка.КурсРасчетов;
КонецФункции

Функция ЗначениеВалютаВзаиморасчетов(Контекст, Объект, Модель, Параметры, СтандартнаяОбработка, Отказ) Экспорт
	Если Параметры.Свойство("ДоговорКонтрагента") И ЗначениеЗаполнено(Параметры.ДоговорКонтрагента) Тогда
		Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.ДоговорКонтрагента, "Валюта");
	Иначе
		Отказ = Истина;
	КонецЕсли;
КонецФункции

Функция ПриИзмененииСчетКонтрагента(Контекст, Объект, ДанныеСтроки, Реквизит, ИзмененныеРеквизиты, РассчитанныеРеквизиты) Экспорт
	Если Объект.ТипОперацииБюджетирование = Перечисления.ТипыОперацийБюжетирование.КонвертацияВалюты Тогда
		ИмяРеквизитаВалюты = "ВалютаВзаиморасчетов";
	Иначе
		ИмяРеквизитаВалюты = "ВалютаДокумента";
	КонецЕсли;
	Если РассчитанныеРеквизиты[ИмяРеквизитаВалюты] = Истина ИЛИ НЕ ЗначениеЗаполнено(Объект.СчетКонтрагента) Тогда
		Возврат Истина;
	КонецЕсли;
	РаботаСМодельюКлиентСервер.УстановитьЗначение(Контекст, ИмяРеквизитаВалюты, , ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.СчетКонтрагента , "Валюта"), ИзмененныеРеквизиты);
КонецФункции

Функция ПриИзмененииБанковскийСчет(Контекст, Объект, ДанныеСтроки, Реквизит, ИзмененныеРеквизиты, РассчитанныеРеквизиты) Экспорт
	Если РассчитанныеРеквизиты["ВалютаДокумента"] = Истина ИЛИ НЕ ЗначениеЗаполнено(Объект.БанковскийСчет) Тогда
		Возврат Истина;
	КонецЕсли;
	РаботаСМодельюКлиентСервер.УстановитьЗначение(Контекст, "ВалютаДокумента", , ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.БанковскийСчет , "Валюта"), ИзмененныеРеквизиты);
КонецФункции

#КонецЕсли