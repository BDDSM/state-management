Функция СвойстваСчетКонтрагента(Свойства, Параметры) Экспорт
	Свойства.Вставить("Видимость", Параметры.ФормаОплаты = ПредопределенноеЗначение("Перечисление.ВидыДенежныхСредств.Безналичные"));
	Возврат Истина;
КонецФункции

Функция СвойстваФормаОплаты(Свойства, Параметры) Экспорт
	Свойства.Вставить("Доступность", НЕ Параметры.ТипОперацииБюджетирование = ПредопределенноеЗначение("Перечисление.ТипыОперацийБюжетирование.РасчетыПоНалогамИСборам"));
	Возврат Истина;
КонецФункции

Функция СвойстваКонтрагентРасчетов(Свойства, Параметры) Экспорт
	Свойства.Вставить("Видимость", Параметры.РасчетыЧерезТретьихЛиц);
	Возврат Истина;
КонецФункции

Функция СвойстваДоговорРасчетов(Свойства, Параметры) Экспорт
	Свойства.Вставить("Видимость", Параметры.РасчетыЧерезТретьихЛиц);
	Возврат Истина;
КонецФункции

Функция СвойстваГруппаРасчетыЧерезТретьихЛиц(Свойства, Параметры) Экспорт
	Свойства.Вставить("ЦветФона", ?(Параметры.РасчетыЧерезТретьихЛиц, Новый Цвет(251, 249, 236), Новый Цвет));
	Возврат Истина;
КонецФункции

Функция СвойстваСуммаВзаиморасчетов(Свойства, Параметры) Экспорт
	Свойства.Вставить("Видимость", НЕ Параметры.ВалютаВзаиморасчетов = Параметры.ВалютаДокумента);
	Возврат Истина;
КонецФункции

Функция СвойстваВалютаВзаиморасчетов(Свойства, Параметры) Экспорт
	Если Параметры.ВалютаВзаиморасчетов = Параметры.ВалютаДокумента Тогда
		Свойства.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Авто);
	Иначе
		Свойства.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
	КонецЕсли;
	Свойства.Вставить("ТолькоПросмотр", ЗначениеЗаполнено(Параметры.ДоговорКонтрагента));
	Возврат Истина;
КонецФункции

Функция СвойстваСтраницаАналитикиБюджетирования(Свойства, Параметры) Экспорт
	Количество = Параметры.ДвиженияОперации.Количество();
	Свойства.Вставить("Заголовок", "Аналитики бюджетирования" + ?(Количество > 0, " (" + Количество + ")", ""));
	Возврат Истина;
КонецФункции

Функция СвойстваДвиженияОперацииСуммаВзаиморасчетов(Свойства, Параметры) Экспорт 
	Свойства.Вставить("Заголовок", ?(ЗначениеЗаполнено(Параметры.ВалютаВзаиморасчетов), СтрШаблон("Сумма расчетов, %1", Параметры.ВалютаВзаиморасчетов), "Сумма расчетов"));
	Свойства.Вставить("Видимость", Параметры.ВалютаВзаиморасчетов <> Параметры.ВалютаДокумента);
	Возврат Истина;
КонецФункции

Функция СвойстваДвиженияОперацииСумма(Свойства, Параметры) Экспорт 
	Свойства.Вставить("Заголовок", ?(ЗначениеЗаполнено(Параметры.ВалютаДокумента), СтрШаблон("Сумма платежа, %1", Параметры.ВалютаДокумента), "Сумма платежа"));
	Возврат Истина;
КонецФункции

#Если Сервер Тогда
Функция ЗначениеКроссКурс(Контекст, Модель, Параметры, ДанныеСтроки, СтандартнаяОбработка) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КурсыВалютыВзаиморасчетов.Курс КАК КурсРасчетов,
	|	КурсыВалютыДокумента.Курс КАК КурсДокумента
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &ВалютаДокумента) КАК КурсыВалютыДокумента,
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &ВалютаВзаиморасчетов) КАК КурсыВалютыВзаиморасчетов";
	Запрос.УстановитьПараметр("ВалютаДокумента", Параметры.ВалютаДокумента);
	Запрос.УстановитьПараметр("ВалютаВзаиморасчетов", Параметры.ВалютаВзаиморасчетов);
	Запрос.УстановитьПараметр("Период", Параметры.Дата);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка.КурсДокумента / Выборка.КурсРасчетов;
КонецФункции
#КонецЕсли