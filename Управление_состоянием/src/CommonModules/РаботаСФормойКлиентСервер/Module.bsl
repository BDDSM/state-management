#Область РаботаСФормой

Процедура ДобавитьЗависимостьЭлемента(Модель, ИмяЭлемента, Параметр) Экспорт
	МассивЗависимыхЭлементов = Модель.ЗависимыеЭлементы[Параметр];
	Если МассивЗависимыхЭлементов = Неопределено Тогда
		Модель.ЗависимыеЭлементы[Параметр] = Новый Массив;
		МассивЗависимыхЭлементов = Модель.ЗависимыеЭлементы[Параметр]; 
	ИначеЕсли МассивЗависимыхЭлементов.Найти(ИмяЭлемента) <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	МассивЗависимыхЭлементов.Добавить(ИмяЭлемента);
КонецПроцедуры

Функция Элемент(Контекст, Модель, ЭлементФормыИлиИмя, Параметры = "", НаСервере = Ложь) Экспорт
	Если (ТипЗнч(ЭлементФормыИлиИмя) = Тип("Строка")) Тогда
		ИмяЭлемента = ЭлементФормыИлиИмя;
	Иначе
		ИмяЭлемента = ЭлементФормыИлиИмя.Имя;
	КонецЕсли;
	ЭлементФормы = Модель.Элементы[ИмяЭлемента];
	Если ЭлементФормы <> Неопределено Тогда
		Возврат ЭлементФормы;
	КонецЕсли;
	МассивПараметров = СтрРазделить(Параметры, ", ", Ложь);
	ЭлементФормы = Новый Структура("Имя, Параметры, НаСервере", ИмяЭлемента, МассивПараметров, НаСервере);
	Модель.Элементы[ИмяЭлемента] = ЭлементФормы;
	//Модель.ПараметрыСвойствЭлементов[ИмяЭлемента] = МассивПараметров;
	Для Каждого ИДПараметра Из МассивПараметров Цикл
		РаботаСМодельюКлиентСервер.Параметр(Контекст, Модель, ИДПараметра);
		ДобавитьЗависимостьЭлемента(Модель, ИмяЭлемента, ИДПараметра);
	КонецЦикла;
	Возврат ЭлементФормы;
КонецФункции

Процедура УстановитьПараметрыВыбора(Форма, Модель, Элемент, Отказ = Ложь) Экспорт
	Параметр = Модель.Параметры[Модель.ПараметрыЭлементов[Элемент.Имя]];
	Если Параметр = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ПараметрыВыбора = Новый Массив;
	Для Каждого ИДСвязи Из Параметр.ВходящиеСвязи Цикл
		Связь = Модель.Связи[ИДСвязи];
		Если НЕ Связь.Использование ИЛИ НЕ Связь.ВидСвязи = 1 Тогда
			Продолжить;
		КонецЕсли;
		Если ЗначениеЗаполнено(Связь.Источник) Тогда
			ПараметрИсточника = Модель.Параметры[Связь.Источник];
			Если ПараметрИсточника.ЭтоЭлементКоллекции Тогда
				ПараметрКоллекции = Модель.Параметры[ПараметрИсточника.Коллекция];
				ИмяРеквизита = ОбщийКлиентСервер.ОкончаниеСтрокиПослеРазделителя(ПараметрИсточника.ПутьКДанным, ".");
				ИндексСтроки = РаботаСМодельюКлиентСервер.ЗначениеПараметра(Форма, Модель, Модель.Параметры[ПараметрИсточника.Коллекция+".ИндексСтроки"]);
				ЗначениеПараметра = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(Форма, РаботаСМодельюКлиентСервер.ПутьКДанным(Модель, ПараметрКоллекции))[ИндексСтроки][ИмяРеквизита];
			Иначе
				ЗначениеПараметра = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(Форма, РаботаСМодельюКлиентСервер.ПутьКДанным(Модель, ПараметрИсточника));
			КонецЕсли;
			Если ПараметрИсточника.ПроверкаЗаполнения И НЕ ЗначениеЗаполнено(ЗначениеПараметра) Тогда
				ТекстСообщения	= "Не заполнено значение "+ПараметрИсточника.Идентификатор;
				Если ПараметрИсточника.ЭтоЭлементКоллекции Тогда
					Поле = СтрШаблон("%1[%2].%3", РаботаСМодельюКлиентСервер.ПутьКДанным(Модель, ПараметрКоллекции.ПутьКДанным), Формат(ПараметрКоллекции.ТекущаяСтрока, "ЧН=0; ЧГ=;"), ИмяРеквизита);
				Иначе
					Поле = ?(ПараметрИсточника.СохраняемыеДанные, Модель.ПутьКДанным + ".", "") + ПараметрИсточника.Идентификатор;
				КонецЕсли;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , Поле, , Отказ);
			КонецЕсли;
			ПараметрыВыбора.Добавить(Новый ПараметрВыбора(Связь.ПутьКДанным, ЗначениеПараметра));
		КонецЕсли;
	КонецЦикла;
	Элемент.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);
КонецПроцедуры

Функция УправлениеФормой(Контекст, ИзмененныеРеквизиты = Неопределено, ЗависимыеЭлементы = Неопределено) Экспорт
	Модель = РаботаСМодельюКлиентСервер.МодельОбъекта(Контекст);
	Если ЗависимыеЭлементы = Неопределено Тогда
		ЗависимыеЭлементы = Новый Массив;
	КонецЕсли;
	Если ИзмененныеРеквизиты = Неопределено Тогда
		Для Каждого ЭлементКоллекции Из Модель.ЗависимыеЭлементы Цикл
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ЗависимыеЭлементы, ЭлементКоллекции.Значение, Истина);
		КонецЦикла;
	Иначе
		ОбработанныеПараметры = Новый Соответствие;
		ОбработанныеЭлементы = Новый Соответствие;
		Для Каждого Реквизит Из ИзмененныеРеквизиты Цикл
			ИДПараметра = Реквизит.Параметр;
			Если ОбработанныеПараметры[ИДПараметра] <> Неопределено ИЛИ Модель.ЗависимыеЭлементы[ИДПараметра] = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			ОбработанныеПараметры[ИДПараметра] = ИДПараметра;
			Для Каждого ЭлементФормы Из Модель.ЗависимыеЭлементы[ИДПараметра] Цикл
				Если ОбработанныеЭлементы[ЭлементФормы] <> Неопределено Тогда
					Продолжить;
				КонецЕсли;
				ОбработанныеЭлементы[ЭлементФормы] = ЭлементФормы;
				ЗависимыеЭлементы.Добавить(ЭлементФормы);
			КонецЦикла; 
		КонецЦикла;
		ИзмененныеРеквизиты = Неопределено;
	КонецЕсли;
	
	Для Каждого ИмяЭлемента Из ЗависимыеЭлементы Цикл
		#Если Сервер Тогда
			ИмяКонтекста = "на сервере";
		#Иначе
			ИмяКонтекста = "";
		#КонецЕсли
		//Сообщить("Зависимый элемент "+ИмяКонтекста+": "+ИмяЭлемента);		
		Свойства = Новый Структура;
		Параметры = Новый Структура;
		ЭлементФормы = Модель.Элементы[ИмяЭлемента];
		Если ЭлементФормы = Неопределено ИЛИ ЭлементФормы.Параметры.ВГраница()=-1 Тогда
			Продолжить;
		КонецЕсли;
		#Если Клиент Тогда
			Если ЭлементФормы.НаСервере Тогда
				Возврат Ложь;
			КонецЕсли;
		#КонецЕсли
		Для Каждого ИДПараметра Из ЭлементФормы.Параметры Цикл
			Параметры.Вставить(ИДПараметра, РаботаСМодельюКлиентСервер.ЗначениеПараметра(Контекст, Модель, Модель.Параметры[ИДПараметра]));
		КонецЦикла; 
		Если Вычислить(Модель.Модуль+".Свойства"+ИмяЭлемента+"(Свойства, Параметры)") = Ложь Тогда
			Продолжить;
		КонецЕсли;
		Для Каждого ЭлементСвойства Из Свойства Цикл
			ОбщийКлиентСервер.УстановитьЗначение(Контекст.Элементы[ИмяЭлемента][ЭлементСвойства.Ключ], ЭлементСвойства.Значение);
		КонецЦикла;
		//Сообщить("Свойства " + ИмяКонтекста + ": " + ИмяЭлемента);
	КонецЦикла;
	Возврат Истина;
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийФормы

Процедура НачалоВыбора(Форма, Элемент, СтандартнаяОбработка) Экспорт
	Отказ = Ложь;
	Модель = РаботаСМодельюКлиентСервер.МодельОбъекта(Форма);
	УстановитьПараметрыВыбора(Форма, Модель, Элемент, Отказ);
	Если Отказ Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
КонецПроцедуры

Процедура ПриАктивизацииСтроки(Форма, Элемент) Экспорт
	Модель = РаботаСМодельюКлиентСервер.МодельОбъекта(Форма);
	ПараметрКоллекции = Модель.Параметры[Модель.ПараметрыЭлементов[Элемент.Имя]];
	Если ПараметрКоллекции = Неопределено Тогда
		Возврат;
	Иначе
		Коллекция = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(Форма, РаботаСМодельюКлиентСервер.ПутьКДанным(Модель, ПараметрКоллекции));
		Если Элемент.ТекущаяСтрока = Неопределено Тогда
			ИндексСтроки = Неопределено;
		Иначе
			ИндексСтроки = Коллекция.Индекс(Коллекция.НайтиПоИдентификатору(Элемент.ТекущаяСтрока));
		КонецЕсли; 
		РаботаСМодельюКлиентСервер.УстановитьЗначение(Форма, ПараметрКоллекции.Идентификатор + ".ИндексСтроки",, ИндексСтроки);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

Процедура ОбновитьМодельФормы(Форма) Экспорт
	Форма.Модель = Новый ФиксированнаяСтруктура(Новый Структура(Форма.Модель));
КонецПроцедуры